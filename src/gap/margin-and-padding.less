@marginPaddingList: margin, padding;
@directionList: top, right, bottom, left;
@marginAndPaddingMinValue: 0;
@marginAndPaddingMaxValue: 50;
@marginAndPaddingStep: 2;


// Loop through the typeList and directionList and maxLoop to create the classes
//  eg:  margin-top-2, margin-top-4, ..., margin-top-100
each(@marginPaddingList, .(@type){

  each(@directionList,.(@direction){

    each(range(@marginAndPaddingMinValue, @marginAndPaddingMaxValue, @marginAndPaddingStep), .(@value){
      @j: @value * @marginAndPaddingStep;
      .@{type}-@{direction}-@{j}{@{type}-@{direction}: @j * 1px;}
    });

  });

});


//  eg:  margin-2, margin-4, ..., margin-100
each(@marginPaddingList, .(@type){
  each(range(@marginAndPaddingMinValue, @marginAndPaddingMaxValue, @marginAndPaddingStep), .(@value){
    // multiply by 2px to convert to px
    @j: @value * @marginAndPaddingStep;
    .@{type}-@{j} {
        @{type}: @j * 1px;
    }
  });
});

//  eg: margin: 2px 2px;
each(@marginPaddingList, .(@type){
  each(range(@marginAndPaddingMinValue, @marginAndPaddingMaxValue, @marginAndPaddingStep), .(@value1){
    @ii: @value1 * @marginAndPaddingStep;
    each(range(@marginAndPaddingMinValue, @marginAndPaddingMaxValue, @marginAndPaddingStep), .(@value2){
      @jj: @value2 * @marginAndPaddingStep;
        .@{type}-@{ii}-@{jj} {
            @{type}: @ii * 1px @jj * 1px;
        }
    });
  });
});
